{"uid":"12db342550ce6285","name":"test_failed_login[locked_outuser-secret_sauce-Epic sadface: Sorry, this user has been locked out.]","fullName":"tests.test_login#test_failed_login","historyId":"32f3e63f21306efc555b4805ecfc54dc","time":{"start":1754368617775,"stop":1754368618276,"duration":501},"status":"failed","statusMessage":"AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nassert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'","statusTrace":"login_page = <pages.login_page.LoginPage object at 0x000001AB2A38BBC0>, username = 'locked_outuser', password = 'secret_sauce'\nerror_message = 'Epic sadface: Sorry, this user has been locked out.'\n\n    @allure.story(\"Failed Login\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.tag(\"regression\")\n    @pytest.mark.parametrize(\n        \"username,password,error_message\",\n        [\n            (\"locked_outuser\", \"secret_sauce\", \"Epic sadface: Sorry, this user has been locked out.\"),\n            (\"invalid_user\", \"wrong_pass\", \"Epic sadface: Username and password do not match any user in this service\"),\n            (\"\", \"secret_sauce\", \"Epic sadface: Username is required\"),\n            (\"standard_user\", \"\", \"Epic sadface: Password is required\")\n        ]\n    )\n    def test_failed_login(login_page, username, password, error_message):\n        with allure.step(f\"Test invalid login: {username}/{password}\"):\n            login_page.enter_username(username)\n            login_page.enter_password(password)\n            login_page.click_login()\n            actual_error = login_page.get_error_message()\n>           assert error_message in actual_error, f\"Expected '{error_message}' but got '{actual_error}'\"\nE           AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nE           assert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'\n\ntests\\test_login.py:52: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1754368614499,"stop":1754368617154,"duration":2655},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"login_page","time":{"start":1754368617155,"stop":1754368617773,"duration":618},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nassert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'","statusTrace":"login_page = <pages.login_page.LoginPage object at 0x000001AB2A38BBC0>, username = 'locked_outuser', password = 'secret_sauce'\nerror_message = 'Epic sadface: Sorry, this user has been locked out.'\n\n    @allure.story(\"Failed Login\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.tag(\"regression\")\n    @pytest.mark.parametrize(\n        \"username,password,error_message\",\n        [\n            (\"locked_outuser\", \"secret_sauce\", \"Epic sadface: Sorry, this user has been locked out.\"),\n            (\"invalid_user\", \"wrong_pass\", \"Epic sadface: Username and password do not match any user in this service\"),\n            (\"\", \"secret_sauce\", \"Epic sadface: Username is required\"),\n            (\"standard_user\", \"\", \"Epic sadface: Password is required\")\n        ]\n    )\n    def test_failed_login(login_page, username, password, error_message):\n        with allure.step(f\"Test invalid login: {username}/{password}\"):\n            login_page.enter_username(username)\n            login_page.enter_password(password)\n            login_page.click_login()\n            actual_error = login_page.get_error_message()\n>           assert error_message in actual_error, f\"Expected '{error_message}' but got '{actual_error}'\"\nE           AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nE           assert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'\n\ntests\\test_login.py:52: AssertionError","steps":[{"name":"Test invalid login: locked_outuser/secret_sauce","time":{"start":1754368617775,"stop":1754368618275,"duration":500},"status":"failed","statusMessage":"AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nassert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'\n","statusTrace":"  File \"C:\\Users\\sibup\\OneDrive\\Desktop\\api_testing\\pytest_demo_project\\tests\\test_login.py\", line 52, in test_failed_login\n    assert error_message in actual_error, f\"Expected '{error_message}' but got '{actual_error}'\"\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"2111cbb05ec84464","name":"screenshot","source":"2111cbb05ec84464.png","type":"image/png","size":42807},{"uid":"4a3baf4490d97e4d","name":"log","source":"4a3baf4490d97e4d.txt","type":"text/plain","size":1064},{"uid":"963373d43a3499ae","name":"stderr","source":"963373d43a3499ae.txt","type":"text/plain","size":634}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"stepsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1754368618541,"stop":1754368620745,"duration":2204},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"regression"},{"name":"severity","value":"normal"},{"name":"story","value":"Failed Login"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"LAPTOP-E3GPSS8Q"},{"name":"thread","value":"1708-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"error_message","value":"'Epic sadface: Sorry, this user has been locked out.'"},{"name":"password","value":"'secret_sauce'"},{"name":"username","value":"'locked_outuser'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["regression"]},"source":"12db342550ce6285.json","parameterValues":["'Epic sadface: Sorry, this user has been locked out.'","'secret_sauce'","'locked_outuser'"]}