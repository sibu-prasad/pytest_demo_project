{"name": "test_failed_login[locked_outuser-secret_sauce-Epic sadface: Sorry, this user has been locked out.]", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nassert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'", "trace": "login_page = <pages.login_page.LoginPage object at 0x000001AB2A38BBC0>, username = 'locked_outuser', password = 'secret_sauce'\nerror_message = 'Epic sadface: Sorry, this user has been locked out.'\n\n    @allure.story(\"Failed Login\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.tag(\"regression\")\n    @pytest.mark.parametrize(\n        \"username,password,error_message\",\n        [\n            (\"locked_outuser\", \"secret_sauce\", \"Epic sadface: Sorry, this user has been locked out.\"),\n            (\"invalid_user\", \"wrong_pass\", \"Epic sadface: Username and password do not match any user in this service\"),\n            (\"\", \"secret_sauce\", \"Epic sadface: Username is required\"),\n            (\"standard_user\", \"\", \"Epic sadface: Password is required\")\n        ]\n    )\n    def test_failed_login(login_page, username, password, error_message):\n        with allure.step(f\"Test invalid login: {username}/{password}\"):\n            login_page.enter_username(username)\n            login_page.enter_password(password)\n            login_page.click_login()\n            actual_error = login_page.get_error_message()\n>           assert error_message in actual_error, f\"Expected '{error_message}' but got '{actual_error}'\"\nE           AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nE           assert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'\n\ntests\\test_login.py:52: AssertionError"}, "steps": [{"name": "Test invalid login: locked_outuser/secret_sauce", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'Epic sadface: Sorry, this user has been locked out.' but got 'Epic sadface: Username and password do not match any user in this service'\nassert 'Epic sadface: Sorry, this user has been locked out.' in 'Epic sadface: Username and password do not match any user in this service'\n", "trace": "  File \"C:\\Users\\sibup\\OneDrive\\Desktop\\api_testing\\pytest_demo_project\\tests\\test_login.py\", line 52, in test_failed_login\n    assert error_message in actual_error, f\"Expected '{error_message}' but got '{actual_error}'\"\n"}, "start": 1754368617775, "stop": 1754368618275}], "attachments": [{"name": "screenshot", "source": "06686e81-b3d4-467f-bf2d-b433e7d83291-attachment.png", "type": "image/png"}, {"name": "log", "source": "0765ef11-9498-46df-9b40-fbc2610051ae-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c92965ab-8a0f-48bd-867b-1a9d44f37e1a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "username", "value": "'locked_outuser'"}, {"name": "password", "value": "'secret_sauce'"}, {"name": "error_message", "value": "'Epic sadface: Sorry, this user has been locked out.'"}], "start": 1754368617775, "stop": 1754368618276, "uuid": "82263680-30a2-432e-88ad-6b11122ca7c4", "historyId": "32f3e63f21306efc555b4805ecfc54dc", "testCaseId": "eb98303b78b0dd8a81a7d4c9688110a7", "fullName": "tests.test_login#test_failed_login", "labels": [{"name": "tag", "value": "regression"}, {"name": "severity", "value": "normal"}, {"name": "story", "value": "Failed Login"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "LAPTOP-E3GPSS8Q"}, {"name": "thread", "value": "1708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}